name: 'semver'
description: 'Provides sevmer output for current git repo'
inputs:
  debug:
    required: false
    default: false
  file:
    required: false
    default: ''
  process_dotnet:
    required: false
    default: false
outputs:
  version:
    description: Json based string with version values
    value: ${{ steps.version.outputs.json}}
runs:
  using: "composite"
  steps:
    # - id: set-path
    #   shell: bash
    #   run: echo ${{ github.action_path }}/bin >> $GITHUB_PATH
    # - id: debug
    #   shell: bash
    #   if: ${{ inputs.debug == 'true' }}
    #   run: |
    #     echo "VERSIONING_DEBUG=true" >> "$GITHUB_ENV"
    #     echo GITHUB_PATH=$GITHUB_PATH
    #     echo PATH=$PATH
    - id: version
      shell: bash
      run: |
        set -o pipefail
        export PATH=$PATH:${{ github.action_path }}/bin
        JSON=$(semver)
        if [[ -z ${JSON} ]]; then
          exit -1
        else
          echo "json=${JSON}" >> $GITHUB_OUTPUT
        fi
    - id: result
      shell: bash
      run: |
        echo "Building ${{fromJson(steps.version.outputs.json).SemVer}}"
    - id: dotnet
      if: ${{ inputs.process_dotnet == 'true' }}
      shell: bash 
      run: |
        set -o pipefail

        if ! [[ -x "$(command -v xmlstarlet)" ]]; then
            echo "warning: xmlstarlet is not installed"
            if [[ "${RUNNER_OS}" == "Windows" ]]; then
                choco install xmlstarlet jq
            elif [[ "${RUNNER_OS}" == "Linux" ]]; then
                sudo apt update && sudo apt install xmlstarlet jq -y
            elif [[ "${RUNNER_OS}" == "macOS" ]]; then
                brew install xmlstarlet jq
            else
                echo "Unknown RUNNER_OS:${RUNNER_OS}"
                exit -1
            fi
        fi
        semver | process_dotnet
    - id: file
      shell: bash
      if: inputs.file != ''
      run: |
        echo "${{steps.version.outputs.json}}" >> ${{inputs.file}}

      