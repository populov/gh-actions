name: 'semver'
description: 'Provides sevmer output for current git repo'
inputs:
  debug:
    required: false
    default: false
  file:
    required: false
    default: ''
  process_dotnet:
    required: false
    default: false
outputs:
  version:
    description: Json based string with version values
    value: ${{ steps.version.outputs.json}}
runs:
  using: "composite"
  steps:
    - id: set-path
      shell: bash
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH
    - id: debug
      shell: bash
      if: ${{ inputs.debug == 'true' }}
      run: |
        echo "VERSIONING_DEBUG=true" >> "$GITHUB_ENV"
    - id: version
      shell: bash
      run: |
        set -o pipefail
        JSON=$(semver)
        if [[ -z ${JSON} ]]; then
          exit -1
        else
          echo "json=${JSON}" >> $GITHUB_OUTPUT
        fi
    - id: result
      shell: bash
      run: |
        echo "Building ${{fromJson(steps.version.outputs.json).SemVer}}"
    - id: dotnet
      if: ${{ inputs.process_dotnet == 'true' }}
      shell: bash 
      run: |
        set -o pipefail

        if ! [[ -x "$(command -v xmlstarlet)" ]]; then
            echo "warning: xmlstarlet is not installed"
            if [[ "${{runner.os}}" == "Windows" ]]; then
                choco upgrade xmlstarlet
            elif [[ "${{runner.os}}" == "Linux" ]]; then
                sudo apt update && sudo apt install xmlstarlet -y
            elif [[ "${{runner.os}}" == "macOS" ]]; then
                brew install xmlstarlet
            else
                echo "Unknown RUNNER_OS:${{runner.os}}"
                exit -1
            fi
        fi
        if ! [[ -x "$(command -v jq)" ]]; then
            echo "warning: jq is not installed"
            if [[ "${{runner.os}}" == "Windows" ]]; then
                choco upgrade jq
            elif [[ "${{runner.os}}" == "Linux" ]]; then
                sudo apt update && sudo apt install jq -y
            elif [[ "${{runner.os}}" == "macOS" ]]; then
                brew install jq
            else
                echo "Unknown RUNNER_OS:${{runner.os}}"
                exit -1
            fi
        fi
        semver | process_dotnet
    - id: file
      shell: bash
      if: inputs.file != ''
      run: |
        echo "${{steps.version.outputs.json}}" >> ${{inputs.file}}

      